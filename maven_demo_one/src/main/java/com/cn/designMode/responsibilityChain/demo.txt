职责链模式
1）职责链模式又叫责任链模式，为请求创建了一个接受者对象的链。
这种模式对请求的发送者和接受者进行解耦。
2）职责链模式通常每个接受者都包含对另一个接受者的引用。如果一个对象不能处理该请求，
那么它会把相同的请求传给下一个接受者，依此类推。
3)这种类型的设计模式属于行为型模式。

职责链模式：使多个对象都有机会处理请求，从而避免请求的发送者和接受者之间的耦合关系。
将这个对象连成一条链，并沿着这条链传递该请求，知道有一个对象处理它为止。

职责链模式在SpringMVC中的应用：
SpringMVC中类HandlerExecutionChain
说明：
SpringMVC请求的历程图中，执行了拦截器相关方法interceptor.preHandler等等，在处理SpringMVC请求时，
使用到了职责链模式还使用到了适配器模式。
HandlerExecutionChain 主要负责的是请求拦截器的执行和请求处理，但是他本身不处理请求，
只是将请求分配给脸上注册处理器执行，这是职责链实现方式，减少职责链本身与处理逻辑之间的耦合，规范了处理流程。
HandlerExecutionChain 维护了HandlerInterceptor的集合，可以向其中注册相应的拦截器。

职责链模式的注意事项和细节：
1）将请求和处理分开，实现解耦，提供系统的灵活性
2）简化了对象，使对象不需要知道链的结构
3）性能会受到影响，特别是链比较长的时候，因此需控制链中最大节点数量，一般通过在Handler中
设置一个最大节点数量，在setNext()方法中判断是否已经超过法制，超过则不允许该链建立，避免
出现超长链无意识地破坏系统性能。
4）调试不方便。采用了类似递归的方式，调试时逻辑可能比较复杂。
5）最佳应用场景：有多个对象可以处理同一个请求时，比如：多级请求、请假/加薪等审批流程、
Java Web中Tomcat对Encoding的处理、拦截器