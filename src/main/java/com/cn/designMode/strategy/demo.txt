策略模式：分别封装行为接口，实现算法族，超类里面放行为接口对象，在子类里具体设定行为对象。
原则是：分离变化部分，封装接口，基于接口编程各种功能。此模式让行为算法的变化独立于算法的使用者。
策略模式的注意事项和细节：
1）策略模式的关键是：分析项目中变化部分与不变化部分。
2）策略模式的核心思想是：多用组合/聚合，少用继承；用行为类组合，而不是行为的继承，更有弹性。
3）体现了"对修改关闭，对扩展开发"原则，客户端增加行为不用修改原有代码，只要添加一种策略（或者行为）即可，
避免了使用多重转移语句（if...else  if...else）。
4）提供了可以替换继承关系的办法：策略模式将算法封装在独立的Strategy类中使得你可以独立于其他Context改变它，
使它易于切换、易于理解、易于扩展
5）需要注意的是：每添加一个策略就需要增加一个类，当策略过多是会导致类数目庞大。